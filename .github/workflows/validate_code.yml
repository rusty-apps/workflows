name: validate generic code

on:
  workflow_call:
    inputs:
      dockerlint:
        description: Run dockerlint
        required: false
        type: boolean
        default: false
      dockerfile:
        description: Dockerfile path for linting (default Dockerfile)
        required: false
        type: string
        default: Dockerfile
      markdownlint:
        description: Run Markdown lint
        required: false
        type: boolean
        default: false
      rustlint:
        description: Run rust lint
        required: false
        type: boolean
        default: false
      workflowlint:
        description: Run workflow lint
        required: false
        type: boolean
        default: false
      yamllint:
        description: Run yaml lint
        required: false
        type: boolean
        default: false
jobs:
  validate-code:
    name: Validate application, actions and docker code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Workflow Repo - Dump some env variables
        run: |
          echo "HOME                 ${HOME}"
          echo "CI                   ${CI}"
          echo "GITHUB_WORKFLOW      ${GITHUB_WORKFLOW}"
          echo "GITHUB_RUN_ID        ${GITHUB_RUN_ID}"
          echo "GITHUB_RUN_NUMBER    ${GITHUB_RUN_NUMBER}"
          echo "GITHUB_JOB           ${GITHUB_JOB}"
          echo "GITHUB_ACTION        ${GITHUB_ACTION}"
          echo "GITHUB_ACTION_PATH   ${GITHUB_ACTION_PATH}"
          echo "GITHUB_ACTIONS       ${GITHUB_ACTIONS}"
          echo "GITHUB_ACTOR         ${GITHUB_ACTOR}"
          echo "GITHUB_REPOSITORY    ${GITHUB_REPOSITORY}"
          echo "GITHUB_EVENT_NAME    ${GITHUB_EVENT_NAME}"
          echo "GITHUB_EVENT_PATH    ${GITHUB_EVENT_PATH}"
          echo "GITHUB_WORKSPACE     ${GITHUB_WORKSPACE}"
          echo "GITHUB_SHA           ${GITHUB_SHA}"
          echo "GITHUB_REF           ${GITHUB_REF}"
          echo "GITHUB_REF_NAME      ${GITHUB_REF_NAME}"
          echo "GITHUB_REF_PROTECTED ${GITHUB_REF_PROTECTED}"
          echo "GITHUB_REF_TYPE      ${GITHUB_REF_TYPE}"
          echo "GITHUB_HEAD_REF      ${GITHUB_HEAD_REF}"
          echo "GITHUB_BASE_REF      ${GITHUB_BASE_REF}"
          echo "GITHUB_SERVER_URL    ${GITHUB_SERVER_URL}"
          echo "GITHUB_API_URL       ${GITHUB_API_URL}"
          echo "GITHUB_GRAPHQL_URL   ${GITHUB_GRAPHQL_URL}"
          echo "RUNNER_NAME          ${RUNNER_NAME}"
          echo "RUNNER_OS            ${RUNNER_OS}"
          echo "RUNNER_TEMP          ${RUNNER_TEMP}"
          echo "RUNNER_TOOL_CACHE    ${RUNNER_TOOL_CACHE}"
          echo "------------------------------------------"
          pwd
          ls -la

      # Dockerfile
      - name: Lint Dockerfile
        if: ${{ inputs.dockerlint == true }}
        uses: ./.github/actions/dockerfile-lint
        with:
          dockerfile: ${{ inputs.dockerfile }}
          # dockerfile: ${{ format('{0}/{1}', github.workspace, inputs.dockerfile) }}

      # Markdown
      - name: Lint Markdown
        if: ${{ inputs.markdownlint }}
        uses: nosborn/github-action-markdown-cli@v2.0.0
        with:
          files: .

      # Rust source
      - name: Lint Rust source - add clippy
        if: ${{ inputs.rustlint == true }}
        run: rustup component add clippy

      - name: lint Rust source
        if: ${{ inputs.rustlint == true }}
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

      # Workflows
      - name: Lint workflows
        if: ${{ inputs.workflowlint == true }}
        uses: cschleiden/actions-linter@v1
        with:
          workflows: '[".github/workflows/*.yaml"]'

      # Yaml
      - name: Lint yaml files
        if: ${{ inputs.yamllint == true }}
        uses: ibiqlik/action-yamllint@v3
